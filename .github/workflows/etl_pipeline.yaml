name: etl-pipeline

on:
  schedule:
    - cron: '0 0 * * *'

  workflow_dispatch:

jobs:

  etl_pipeline:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
      repository-projects: write
      id-token: write

    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install dependencies
        run: uv sync

      - name: Install DVC
        uses: iterative/setup-dvc@v1

      - name: Create credentials.json
        env:
          GDRIVE_CREDENTIALS: ${{ secrets.GDRIVE_CREDENTIALS }}
        run: |
          echo $GDRIVE_CREDENTIALS > credentials.json

      - name: Configure DVC
        run: >
          uv run dvc remote modify gdrive --local
          gdrive_service_account_json_file_path
          credentials.json

      - name: Configure git
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"

      - name: Execute pipeline
        env:
          YOUTUBE_DATA_API_KEY: ${{ secrets.YOUTUBE_DATA_API_KEY }}
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          WEBSHARE_PROXY_USERNAME: ${{ secrets.WEBSHARE_PROXY_USERNAME }}
          WEBSHARE_PROXY_PASSWORD: ${{ secrets.WEBSHARE_PROXY_PASSWORD }}
          TOKENIZERS_PARALLELISM: false
        run: make

      - name: Check for changes
        id: dvc-check
        run: |
          dvc status --quiet || echo "CHANGES=true" >> $GITHUB_ENV

      - name: Commit and push changes
        if: env.CHANGES == 'true'
        run: |
          dvc add ./artifacts
          git add artifacts.dvc
          git commit -m "Executing the ETL pipeline"
          dvc push
          git push

      - name: Clean up repo
        run: |
          make clean
          rm -rf artifacts
          rm -rf logs
